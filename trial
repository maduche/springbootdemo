import org.apache.kafka.clients.producer.KafkaProducer;
import org.apache.kafka.clients.producer.ProducerRecord;
import org.apache.kafka.clients.producer.RecordMetadata;
import java.util.Properties;

public class KafkaPublisher {

    public static void main(String[] args) {
        Properties props = new Properties();
        props.put("bootstrap.servers", "localhost:9092");
        props.put("key.serializer", "org.apache.kafka.common.serialization.StringSerializer");
        props.put("value.serializer", "org.apache.kafka.common.serialization.StringSerializer");

        KafkaProducer<String, String> producer = new KafkaProducer<>(props);

        ProducerRecord<String, String> record = new ProducerRecord<>("my-topic", "Hello from Java with metadata!");

        // Send with a callback to print metadata
        producer.send(record, (RecordMetadata metadata, Exception exception) -> {
            if (exception == null) {
                System.out.println("‚úÖ Message sent successfully!");
                System.out.println("üì¶ Topic: " + metadata.topic());
                System.out.println("üìå Partition: " + metadata.partition());
                System.out.println("üî¢ Offset: " + metadata.offset());
            } else {
                System.err.println("‚ùå Error sending message:");
                exception.printStackTrace();
            }
        });

        producer.flush(); // Ensure the message is sent before closing
        producer.close();
    }
}
"I initially deployed all 4 MMS components across the 4 data centers. Three were successful, but the payment-order deployment failed in the LEW data center. I retriggered the pipeline as you shared, and since the defined order requires deployment to all 4 data centers, I attempted again ‚Äî but the deployment failed once more."
