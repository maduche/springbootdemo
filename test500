import java.util.regex.*;

public class AuthResponseExtractor {
    public static void main(String[] args) {
        String input = "auth Response Code :   05 AND auth response description:  Do not honor";

        // Regex pattern with optional spaces and case-insensitive flag
        Pattern pattern = Pattern.compile(
            "auth response code\\s*[:\\s]*([\\S]+).*?auth response description\\s*[:\\s]*(.*)",
            Pattern.CASE_INSENSITIVE);
        Matcher matcher = pattern.matcher(input);

        if (matcher.find()) {
            String code = matcher.group(1);
            String description = matcher.group(2).trim();
            System.out.println("Code: " + code);
            System.out.println("Description: " + description);
        } else {
            System.out.println("No match found.");
        }
    }
}

----------------

import java.util.regex.*;

public class AuthResponseExtractor {
    public static void main(String[] args) {
        String input = "auth Response Code :   05 AND auth response description:  Do not honor";

        // Improved regex: handles optional colon and spaces more precisely
        Pattern pattern = Pattern.compile(
            "auth response code\\s*[:]?\\s*(\\S+).*?auth response description\\s*[:]?\\s*(.+)",
            Pattern.CASE_INSENSITIVE);
        
        Matcher matcher = pattern.matcher(input);

        if (matcher.find()) {
            String code = matcher.group(1);
            String description = matcher.group(2).trim();
            System.out.println("Code: " + code);
            System.out.println("Description: " + description);
        } else {
            System.out.println("No match found.");
        }
    }
}

-----------------
Step-by-Step Explanation:
Part 1: auth response code\\s*[:]?\\s*(\\S+)
auth response code – literal text (ignores case)

\\s* – match zero or more spaces (before the colon)

[:]? – match an optional colon :

\\s* – match zero or more spaces (after the colon)

(\\S+) – capture the code:

\\S+ means "one or more non-space characters" (e.g., 05, 00, etc.)

Part 2: .*?auth response description\\s*[:]?\\s*(.+)
.*? – match anything between the code and the description (non-greedy)

auth response description – literal text (ignores case)

\\s*[:]?\\s* – same logic as above, allows optional colon and spaces

(.+) – capture the description:

.+ means "one or more of any characters" — this gets the full message like Do not honor


